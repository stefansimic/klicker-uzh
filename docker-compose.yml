services:
  reverse_proxy_docker:
    image: docker.io/library/traefik:v2.10
    command:
      - --api.insecure=true
      - --providers.file=true
      - --providers.file.filename=/etc/traefik/rules.yaml
      - --providers.file.watch=true
      - --entrypoints.web.address=:80
    ports:
      - 80:80
      - 443:443
    volumes:
      - './util/traefik/rules_docker.yaml:/etc/traefik/rules.yaml'
    networks:
      - klicker
    labels:
        - "traefik.http.middlewares.cors.headers.accesscontrolallowmethods=*"
        - "traefik.http.middlewares.cors.headers.accesscontrolalloworiginlist=*"
        - "traefik.http.middlewares.cors.headers.accesscontrolmaxage=100"
        - "traefik.http.middlewares.cors.headers.addvaryheader=true"
    expose:
      - "80"
      - "443"
    extra_hosts:
      - "host.containers.internal:host-gateway"

  auth:
    profiles:
      - full
    image: ghcr.io/stefansimic/klicker-uzh/auth:v3.1-dev-merge
    environment:
      APP_SECRET: abcd
      DATABASE_URL: 'postgres://klicker:klicker@postgres:5432/main'
      # EDUID_CLIENT_SECRET: ''
      # TEAMS_WEBHOOK_URL: ''
    ports:
      - 3010:3000
    networks:
      - klicker
    extra_hosts:
      - "host.containers.internal:host-gateway"

  frontend_pwa:
    profiles:
      - full
    image: ghcr.io/stefansimic/klicker-uzh/frontend-pwa:v3.1-dev-merge
    environment:
      APP_SECRET: abcd
    ports:
      - 3001:3000
    networks:
      - klicker
    extra_hosts:
      - "host.containers.internal:host-gateway"

  frontend_manage:
    profiles:
      - full
    image: ghcr.io/stefansimic/klicker-uzh/frontend-manage:v3.1-dev-merge
    ports:
      - 3002:3000
    networks:
      - klicker
    extra_hosts:
      - "host.containers.internal:host-gateway"

  frontend_control:
    profiles:
      - full
    image: ghcr.io/stefansimic/klicker-uzh/frontend-control:v3.1-dev-merge
    ports:
      - 3003:3000
    networks:
      - klicker
    extra_hosts:
      - "host.containers.internal:host-gateway"

  backend:
    profiles:
      - full
    image: ghcr.io/stefansimic/klicker-uzh/backend-docker:v3.1-dev-merge
    environment:
      APP_SECRET: 'abcd'
      COOKIE_DOMAIN: .klicker.xeno-isenegger.ch
      CRON_TOKEN: 'abcd'
      DATABASE_URL: 'postgres://klicker:klicker@postgres:5432/klicker'
      NOTIFICATION_SUPPORT_MAIL: 'noone@klicker.com'
      NOTIFICATION_URL: 'noone@klicker.com'
      REDIS_CACHE_HOST: 'redis_cache'
      REDIS_CACHE_PASS: ''
      REDIS_CACHE_PORT: 6379
      REDIS_HOST: 'redis_exec'
      REDIS_PASS: ''
      REDIS_PORT: 6379
      # BLOB_STORAGE_ACCESS_KEY: ''
      # BLOB_STORAGE_ACCOUNT_NAME: ''
      # LISTMONK_TEMPLATE_MIGRATION_REQUEST: ''
      # LISTMONK_URL: ''
      # LISTMONK_USER: ''
      # MIGRATION_SERVICE_BUS_QUEUE_NAME: ''
      # NOTIFICATION_SECRET: ''
      # REDIS_CACHE_TLS: 'true'
      # REDIS_TLS: 'true'
      # TEAMS_WEBHOOK_URL: ''
      # VAPID_PRIVATE_KEY: ''
      # VAPID_PUBLIC_KEY: ''
    ports:
      - 3000:3000
    networks:
      - klicker
    extra_hosts:
      - "host.containers.internal:host-gateway"

  # main database
  postgres:
    image: docker.io/library/postgres:15
    environment:
      POSTGRES_USER: klicker
      POSTGRES_PASSWORD: klicker
      POSTGRES_DB: klicker
    ports:
      - 5432:5432
    networks:
      - klicker
    volumes:
      - klicker_data:/var/lib/postgresql/data

    # redis instance to support session execution
  redis_exec:
    image: docker.io/library/redis:7
    ports:
      - 6379:6379
    networks:
      - klicker
    volumes:
      - redis_data:/data

  # redis instance for page caching and rate limiting
  redis_cache:
    image: docker.io/library/redis:7
    ports:
      - 6380:6379
    networks:
      - klicker

  # fake smtp server for catching email during development
  mailhog:
    image: docker.io/mailhog/mailhog:latest
    ports:
      - 1025:1025
      - 8025:8025
    networks:
      - klicker
      
networks:
  klicker:
    driver: bridge

volumes:
  listmonk_data:
  klicker_data:
  redis_data:
